// Définition des tailles de marge
$gaps: (
        0: 0,
        1: 10px,
        2: 20px,
        3: 30px,
        4: 40px,
        5: 50px
);

$paddings: (
        0: 0,
        1: 15px,
        2: 25px,
        3: 35px,
        4: 45px,
        5: 55px
);

.flix-grid {
  box-sizing: border-box;
  max-width: 1300px;
  width: 100%;
  padding: 25px 15px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(12, 1fr); // Crée 12 colonnes de largeur équivalentes
}

.flix-grid-l {
  box-sizing: border-box;
  max-width: 1500px;
  width: 100%;
  padding: 25px 15px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(12, 1fr); // Crée 12 colonnes de largeur équivalentes
}

.flix-grid-m {
  box-sizing: border-box;
  max-width: 1200px;
  width: 100%;
  padding: 25px 15px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(12, 1fr); // Crée 12 colonnes de largeur équivalentes
}

.flix-grid-s {
  box-sizing: border-box;
  max-width: 1000px;
  width: 100%;
  padding: 25px 15px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(12, 1fr); // Crée 12 colonnes de largeur équivalentes
}

.flix-row {
  box-sizing: border-box;
  display: grid;
  grid-template-columns: inherit;
  width: 100%;
  margin: 0 auto;
  padding: 25px;
  grid-column: 1 / span 12;
}

.max-height {
  height: 100%;
}

.flix-page {
  box-sizing: border-box;
  display: grid;
  grid-template-columns: inherit;
  width: 100%;
  margin: 0 auto;
  padding: 25px;
  grid-column: 1 / span 12;
  min-height: 100vh;

}

@for $i from 1 through 12 {
  .flix-col-#{$i} {
    grid-column: span #{$i}; // Indique à la colonne de prendre le nombre approprié
    padding: 25px 10px;
    height: fit-content;
  }
  .flix-row.max-height {
    .flix-col-#{$i} {
      height: auto;
    }
  }
}

@each $index, $gap in $gaps {
  .g-#{$index} {
    grid-gap: $gap;
  }
}

@each $index, $padding in $paddings {
  .p-#{$index} {
    padding-right: $padding;
    padding-left: $padding;
  }
}

// todo: retirer les couleurs de test
// ------------------------------------
.bg-dominant {
  background-color: var(--color-dominant);
  border-radius: 5px;
  color: var(--color-primary);
}

.bg-primary {
    background-color: var(--color-primary);
    border-radius: 5px;
    color: var(--color-dominant);
}

.bg-secondary {
    background-color: var(--color-secondary);
    border-radius: 5px;
    color: var(--color-dominant);
}

.bg-tertiary {
    background-color: var(--color-tertiary);
    border-radius: 5px;
    color: var(--color-dominant);
}

// ------------------------------------

.grid-row {
  display: grid;
  grid-direction: row;
  align-items: center;
}

.grid-column {
  display: grid;
  grid-direction: column;
  align-items: center;
}

.grid-row-reverse {
  display: grid;
  grid-direction: row-reverse;
  align-items: center;
}

.grid-column-reverse {
  display: grid;
  grid-direction: column-reverse;
  align-items: center;
}

.grid-wrap {
  grid-wrap: wrap;
}

.grid-nowrap {
  grid-wrap: nowrap;
}

.grid-wrap-reverse {
  grid-wrap: wrap-reverse;
}

.grid-justify-start {
  justify-content: grid-start;
}

.grid-justify-end {
  justify-content: grid-end;
}

.grid-justify-center {
  justify-content: center;
}

.grid-justify-space-between {
  justify-content: space-between;
}

.grid-justify-space-around {
  justify-content: space-around;
}

.grid-justify-space-evenly {
  justify-content: space-evenly;
}

.grid-align-start {
  align-items: grid-start;
}

.grid-align-end {
  align-items: grid-end;
}

.grid-align-center {
  align-items: center;
}

.grid-align-baseline {
  align-items: baseline;
}

.grid-align-stretch {
  align-items: stretch;
}

.grid-align-content-start {
  align-content: grid-start;
}

.grid-align-content-end {
  align-content: grid-end;
}

.grid-align-content-center {
  align-content: center;
}

.grid-align-content-space-between {
  align-content: space-between;
}

.grid-align-content-space-around {
  align-content: space-around;
}

.grid-align-content-stretch {
  align-content: stretch;
}

.grid-align-self-start {
  align-self: grid-start;
}

.grid-align-self-end {
  align-self: grid-end;
}

.grid-align-self-center {
  align-self: center;
}

.grid-align-self-baseline {
  align-self: baseline;
}

.grid-align-self-stretch {
  align-self: stretch;
}

.grid-justify-self-start {
  justify-self: grid-start;
}

.grid-justify-self-end {
  justify-self: grid-end;
}

.grid-justify-self-center {
  justify-self: center;
}

.grid-justify-self-baseline {
  justify-self: baseline;
}

.grid-justify-self-stretch {
  justify-self: stretch;
}

.grid-grow-0 {
  grid-grow: 0;
}

.grid-grow-1 {
  grid-grow: 1;
}

.grid-shrink-0 {
  grid-shrink: 0;
}

.grid-shrink-1 {
  grid-shrink: 1;
}

.grid-order-0 {
  order: 0;
}

.grid-order-1 {
  order: 1;
}

.grid-order-2 {
  order: 2;
}

.grid-order-3 {
  order: 3;
}

.grid-order-4 {
  order: 4;
}

.grid-order-5 {
  order: 5;
}
